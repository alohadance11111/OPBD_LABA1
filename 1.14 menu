import tkinter as tk
from tkinter import messagebox, filedialog

def create_shape():
    top = tk.Toplevel()

    x_label = tk.Label(top, text="X:")
    x_label.grid(row=0, column=0)
    x_entry = tk.Entry(top)
    x_entry.grid(row=0, column=1)

    y_label = tk.Label(top, text="Y:")
    y_label.grid(row=1, column=0)
    y_entry = tk.Entry(top)
    y_entry.grid(row=1, column=1)

    width_label = tk.Label(top, text="ширина:")
    width_label.grid(row=2, column=0)
    width_entry = tk.Entry(top)
    width_entry.grid(row=2, column=1)

    height_label = tk.Label(top, text="высота:")
    height_label.grid(row=3, column=0)
    height_entry = tk.Entry(top)
    height_entry.grid(row=3, column=1)

    shape_var = tk.StringVar()
    radiobutton1 = tk.Radiobutton(top, text="прямоугольник", variable=shape_var, value="rectangle")
    radiobutton1.grid(row=4, column=0)
    radiobutton2 = tk.Radiobutton(top, text="овал", variable=shape_var, value="oval")
    radiobutton2.grid(row=4, column=1)

    def draw_shape():
        try:
            x = int(x_entry.get())
            y = int(y_entry.get())
            width = int(width_entry.get())
            height = int(height_entry.get())
            shape_type = shape_var.get()

            if shape_type == "rectangle":
                canvas.create_rectangle(x, y, x + width, y + height)
            elif shape_type == "oval":
                canvas.create_oval(x, y, x + width, y + height)

            top.destroy()
        except ValueError:
            messagebox.showerror("Ошибка", "Пожалуйста, введите числовые значения для координат и размеров")

    draw_button = tk.Button(top, text="создать", command=draw_shape)
    draw_button.grid(row=5, columnspan=2)

def clear_canvas():
    result = messagebox.askyesno("Подтверждение", "Вы уверены, что хотите очистить поле?")
    if result:
        canvas.delete("all")

def open_file():
    file_path = filedialog.askopenfilename(filetypes=[("Text files", "*.txt"), ("All files", "*.*")])
    if file_path:
        try:
            with open(file_path, "r") as file:
                canvas.delete("all")
                canvas.create_text(200, 200, text=file.read())
        except IOError:
            messagebox.showerror("Ошибка", "Не удалось открыть файл")

def save_file():
    file_path = filedialog.asksaveasfilename(filetypes=[("Text files", "*.txt"), ("All files", "*.*")])
    if file_path:
        try:
            with open(file_path, "w") as file:
                file.write(canvas.itemcget("all", "text"))
        except IOError:
            messagebox.showerror("Ошибка", "Не удалось сохранить файл")

root = tk.Tk()

canvas = tk.Canvas(root, width=400, height=400)
canvas.grid(row=0, column=0, columnspan=2)

menu_bar = tk.Menu(root)
file_menu = tk.Menu(menu_bar, tearoff=0)
file_menu.add_command(label="Открыть", command=open_file)
file_menu.add_command(label="Сохранить", command=save_file)
file_menu.add_separator()
file_menu.add_command(label="Выход", command=root.quit)
menu_bar.add_cascade(label="Файл", menu=file_menu)

root.config(menu=menu_bar)

add_button = tk.Button(root, text="добавляем фигуру", command=create_shape)
add_button.grid(row=1, columnspan=2)

root.mainloop()
